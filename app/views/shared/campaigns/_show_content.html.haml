- r = local_assigns[:routes_prefix]

- if campaign.errors.any?
  .fr-alert.fr-alert--error.fr-mb-6w
    %p
      %ul
        - campaign.errors.attribute_names.each do |attribute|
          %li= campaign.errors.messages_for(attribute).first

- if campaign.draft? && campaign.date_lancement > Time.zone.today
  = form_for [:admin, campaign], builder: FormBuilderDsfr, url: send("#{r}_campaign_update_status_path", campaign) do |f|
    = f.hidden_field :status_event, value: "plan"
    .fr-callout
      %p.fr-callout__text
        Cette campagne est en brouillon. Pour qu'elle soit active et démarre effectivement le #{l(campaign.date_lancement, format: :long_with_weekday)}, il faut la marquer comme planifiée. Vous pourrez repasser la campagne en brouillon si nécessaire.

        - if campaign.communes.any?(&:active?)
          .fr-mt-2w
            ⚠️ Attention : certaines communes destinataires ont déjà commencé à recenser, il faut les retirer des destinataires avant de pouvoir planifier la campagne.

      = f.submit "Planifier la campagne", disabled: campaign.communes.any?(&:active?)

- elsif campaign.planned? && campaign.date_lancement > Time.zone.today
  = form_for campaign, builder: FormBuilderDsfr, url: send("#{r}_campaign_update_status_path", campaign) do |f|
    = f.hidden_field :status_event, value: "return_to_draft"
    .fr-callout.fr-callout--brown-caramel
      %p.fr-callout__text
        Cette campagne est planifiée,
        = succeed "." do
          %b
            elle démarrera le #{l(campaign.date_lancement, format: :long_with_weekday)}
        %br/
        Si vous avez besoin de la modifier ou de l'annuler, vous pouvez la repasser en brouillon.
      = f.submit "Repasser en brouillon"

- if (campaign.ongoing? || campaign.finished?) && campaign.stats.present?
  = render "shared/campaigns/stats", stats: campaign.stats

.fr-mb-8w
  .fr-grid-row
    .fr-col-md-6
      %h2 Configuration
      %div
        %b Nom de l'émetteur des mails :
        %span= campaign.sender_name.presence || "N/A"
      %div
        %b
          Nom de la DRAC en charge :
        %span= campaign.nom_drac.presence || "N/A"
      %div
        %b Signature des mails :
        - if campaign.signature.present?
          .co-white-space-pre-line.co-blockquote= campaign.signature
        - else
          %span N/A
      .fr-mt-2w
        = button_to "Modifier la configuration", send("edit_#{r}_campaign_path", campaign), class: "fr-btn fr-btn--secondary", method: :get, disabled: !campaign.draft?
    .fr-col-md-6
      %h2 Dates
      %table
        %tbody
          - Campaign::DATE_FIELDS.each do |date_field|
            %tr
              %th.co-text--right.fr-pr-2w= t("activerecord.attributes.campaign.#{date_field}")
              %td= l(campaign.send(date_field), format: :long_with_weekday)
        %tfoot
          %tr
            %td.co-text--center.fr-pt-2w{:colspan => "2"}
              = button_to "Modifier les dates", send("edit_#{r}_campaign_path", campaign), class: "fr-btn fr-btn--secondary", method: :get, disabled: !campaign.draft?

- if campaign.communes.any?
  %p
    = render UnfoldComponent.new(max_height_px: 200, button_text: "Afficher toutes les communes…") do
      %h2 #{campaign.communes.count} communes destinataires :
      %ul.co-columns--4
        - campaign.recipients.includes(:commune).order("communes.nom").each do |recipient|
          %li
            = link_to recipient.commune.nom, send("#{r}_campaign_recipient_path", campaign, recipient)
            = campaign_recipient_status_badge(recipient)
            = campaign_recipient_opt_out_badge(recipient)
            - if recipient.commune.active? && campaign.draft?
              %span.fr-icon--sm.fr-icon-warning-line.fr-text--sm.co-text--red{"aria-hidden" => "true"}
                active

            %span.fr-text--sm.co-text--muted= recipient.commune.code_insee
      - if excluded_communes.any?
        .fr-mt-4w
          %b
            = excluded_communes.count
            communes non inclues :
          %ul.co-columns--4
            - excluded_communes.each do |commune|
              %li
                = commune.nom
                %span.fr-text--sm.co-text--muted= commune.code_insee
- else
  %p Les communes destinataires n'ont pas encore été définies

= button_to campaign.communes.any? ? "Modifier les communes destinataires" : "Définir les communes destinataires", send("#{r}_campaign_edit_recipients_path", campaign), method: :get, class: "fr-btn fr-btn--secondary", disabled: !campaign.draft?

- if campaign.draft? || campaign.planned?

  %h2.fr-mt-4w Actions

  = form_with url: send("#{r}_campaign_path", campaign), method: :delete, data: { turbo_confirm: "Êtes-vous sûr.e  de vouloir supprimer ce brouillon ? C'est irréversible." } do |f|
    = f.submit "Supprimer ce brouillon de campagne…", class: "fr-btn fr-btn--secondary fr-btn--icon-left fr-icon-destroy-line fr-my-1w", disabled: !campaign.draft?

  = button_to "Génerer un aperçu des mails qui vont être envoyés", send("#{r}_campaign_mail_previews_path",campaign), method: :get, class: "fr-btn fr-btn--secondary fr-my-1w", disabled: campaign.communes.empty? || !campaign.draft_or_planned?
