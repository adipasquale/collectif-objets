= render layout: "conservateurs/communes/tabs",
  locals: { commune: @commune, dossier: @dossier, current_tab: :analyse } do

  = render "conservateurs/dossiers/accept_cta", dossier: @dossier

  - if @dossier&.accepted?
    .fr-mb-4w
      = dsfr_alert type: :success, size: :sm do
        Tous les recensements ont été examinés.
        = link_to "Voir l'examen", conservateurs_commune_dossier_path(@commune), class: "fr-btn", data: { turbo_action: "advance" }

  - elsif @commune.completed?
    - unless @commune.dossier.a_des_objets_prioritaires?
      %p.fr-background-contrast--success.fr-p-2w.fr-text-title--blue-france Il n'y a pas d'objet à revoir, la commune a déjà reçu un email automatique, vous pouvez tout de même modifier ou commenter les recensements pour envoyer votre examen à la commune.
    .fr-mb-4w
      - if @dossier.notes_commune.present?
        %p
          = t("activerecord.attributes.dossier.notes_commune")
        = blockquote(@dossier.notes_commune)
      - else
        %i Aucun commentaire laissé par la commune


  = render "edifices/list", edifices: @edifices
  - @edifices.each_with_index do |edifice, index|
    %h4{id: "#{edifice.slug}", class: "#{index == 0 ? "" : "fr-mt-7w"} fr-mb-4w"}
      = edifice_nom(edifice.nom).html_safe
      · #{t("objets.count", count: edifice.objets.length)}
    = render layout: "objets/cards_grid_layout", locals: { count: edifice.objets.length } do
      - reordered = @dossier ? Objet::order_by_recensement_priorite_array(edifice.objets) : edifice.objets
      - reordered.each do |objet|
        .fr-col-md-4
          = render Conservateurs::ObjetCardComponent.new objet, recensement: objet.current_recensement, can_analyse: objet.current_recensement && conservateurs_policy(Analyse.new(recensement: objet.current_recensement)).edit?, commune: @commune
